from flask import Flask, render_template, session, redirect, url_for, escape, request, Response
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'

db = SQLAlchemy(app)

from models import *

@app.route('/', methods=['GET'])
def index():
    data = {{Model.Name}}.query.all()
    return(render_template('index.html', Data=data))

@app.route('/view/<int:ID>', methods=['GET'])
def view(ID):
    data = {{Model.Name}}.query.get(ID)
    return(render_template('form.html', Data=data, Mode="View"))

@app.route('/create', methods=['GET','POST'])
def create():
    if request.method == 'GET':
        return(render_template('form.html',Data=None, Mode="Create"))
    elif request.method == 'POST':
        try:
            data = {{Model.Name}}(
                {% for Field in Model.Fields %}
                {{ Field.Name }} = request.form['{{ Field.Name }}']{% if not loop.last %}, {% endif %}
                {% endfor %})
            db.session.add(data)
            db.session.commit()
            return(redirect(url_for("index")))
        except Exception as e:
            print(e)
            return(render_template('form.html', Mode="Create"))
    else:
        return(render_template('form.html', Mode="Create"))


@app.route('/modify/<int:ID>', methods=['GET', 'POST'])
def modify(ID):
    if request.method == 'GET':
        data = {{Model.Name}}.query.get(ID)
        return(render_template('form.html', Data=data, Mode="Modify"))
    elif request.method == 'POST':
        try:
            data = {{Model.Name}}.query.get(ID)
            {% for Field in Model.Fields %}
            data.{{ Field.Name }} = request.form['{{ Field.Name }}']
            {% endfor %}
            db.session.commit()
            return(redirect(url_for("index")))
        except Exception as e:
            print(e)
            return(render_template('form.html', Mode="Create"))
    else:
        return(render_template('form.html', Mode="Create"))

@app.route('/delete/<int:ID>', methods=['GET', 'POST'])
def delete(ID):
    if request.method == 'GET':
        data = {{Model.Name}}.query.get(ID)
        return(render_template('form.html', Data=data, Mode="Delete"))
    elif request.method == 'POST':
        try:
            data = {{Model.Name}}.query.get(ID)
            db.session.delete(data)
            db.session.commit()
            return(redirect(url_for("index")))
        except Exception as e:
            print(e)
            return(render_template('form.html', Mode="Create"))
    else:
        return(render_template('form.html', Mode="Create"))

if __name__ == '__main__':
    app.run(debug=True)
